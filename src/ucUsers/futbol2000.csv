subreddit,self ID,parent ID,time,text
halo,fp1gmoh,t1_fp185xq,1588234857.0,"I mean, as they should. The standard procedure when you capture the enemy hog is to immediately drive it away to relative safety. It gets so chaotic on heavies that you never know which random explosion will just fly out and blow your stationary hog up."
learnprogramming,fotmloy,t1_foprj6d,1588058700.0,"Yeah, I already submitted the assignment for grading. Thanks so much for the help though! 
It is honestly kind of bs though on the assignment's part. The instructions literally had two sentences and never specified spaces or upper/lower case. Only one of the TAs mentioned this issue (And he isn't even my TA). My professor never even mentioned it. I'm gonna email a complaint about it once my grade comes out. Hopefully their grading style isn't nitpicky as hell in terms of grade deductions."
learnprogramming,foouozj,t1_fompi2m,1587946852.0,"    int main()
    {
    
    	Student president;
    	Student vice_president;
    	Student secretary;
    	Student treasurer;
    	vector<Student*> calc;
    	Student* newstudent = new Student();
    	char x;
    	bool check = true;
    
    	cout << ""President: "";
    	while (cin.get(x)) {
    		if (x == '\n') {
    			break;
    		}
    		if (x != ' ') {
    			president.name += x;
    			check = true;
    		}
    		else {
    			if (check) {
    				president.name += x;
    				check = false;
    			}
    		}
    	}
    	getline(cin, president.name);
    	cout << ""\n"";
    	cout << ""Vice-President: "";
    	while (cin.get(x)) {
    		if (x == '\n') {
    			break;
    		}
    		if (x != ' ') {
    			vice_president.name += x;
    			check = true;
    		}
    		else {
    			if (check) {
    				vice_president.name += x;
    				check = false;
    			}
    		}
    	}
    	getline(cin, vice_president.name);
    	cout << ""\n"";
    	cout << ""Secretary: "";
    
    	while (cin.get(x)) {
    		if (x == '\n') {
    			break;
    		}
    		if (x != ' ') {
    			secretary.name += x;
    			check = true;
    		}
    		else {
    			if (check) {
    				secretary.name += x;
    				check = false;
    			}
    		}
    	}
    	getline(cin, secretary.name);
    	cout << ""\n"";
    	cout << ""Treasurer: "";
    	while (cin.get(x)) {
    		if (x == '\n') {
    			break;
    		}
    		if (x != ' ') {
    			treasurer.name += x;
    			check = true;
    		}
    		else {
    			if (check) {
    				treasurer.name += x;
    				check = false;
    			}
    		}
    	}
    	getline(cin, treasurer.name);
    	cout << ""\n"";
    
    	cout << ""New Member (Q to quit): "";
    	getline(cin, (*newstudent).name);
    	if ((*newstudent).name != ""Q"") {
    		calc.push_back(newstudent);
    		cout << ""\n"";
    	}
    	else {
    		cout << ""\n"";
    	}
    	while ((*newstudent).name != ""Q"") {
    		cout << ""New Member (Q to quit): "";
    		getline(cin, (*newstudent).name);
    		if ((*newstudent).name != ""Q"") {
    			calc.push_back(newstudent);
    			cout << ""\n"";
    		}
    		else {
    			cout << ""\n"";
    		}
    	}
    	StudentClub start(&president, &vice_president, &secretary, &treasurer, calc);
    	
    	
    	if (president.name == vice_president.name && president.name == secretary.name && president.name == treasurer.name) {
    		start.add_member(&president);
    	}
    	else if (president.name == vice_president.name && secretary.name == treasurer.name) {
    		start.add_member(&president);
    		start.add_member(&secretary);
    	}
    	else if (president.name == secretary.name && vice_president.name == treasurer.name) {
    		start.add_member(&president);
    		start.add_member(&vice_president);
    	}
    	else if (president.name == treasurer.name && vice_president.name == secretary.name) {
    		start.add_member(&president);
    		start.add_member(&vice_president);
    	}
    	else if (president.name == vice_president.name && president.name == secretary.name) {
    		start.add_member(&president);
    		start.add_member(&treasurer);
    	}
    
    	else if (president.name == vice_president.name && president.name == treasurer.name) {
    		start.add_member(&president);
    		start.add_member(&secretary);
    	}
    	else if (vice_president.name == secretary.name && vice_president.name == treasurer.name) {
    		start.add_member(&president);
    		start.add_member(&vice_president);
    	}
    	else if (president.name == secretary.name && president.name == treasurer.name) {
    		start.add_member(&president);
    		start.add_member(&vice_president);
    	}
    
    	else if (president.name == vice_president.name) {
    		start.add_member(&president);
    		start.add_member(&secretary);
    		start.add_member(&treasurer);
    	}
    	else if (president.name == secretary.name) {
    		start.add_member(&president);
    		start.add_member(&vice_president);
    		start.add_member(&treasurer);
    	}
    	else if (president.name == treasurer.name) {
    		start.add_member(&president);
    		start.add_member(&vice_president);
    		start.add_member(&secretary);
    	}
    	else if (vice_president.name == secretary.name) {
    		start.add_member(&president);
    		start.add_member(&vice_president);
    		start.add_member(&treasurer);
    	}
    	else if (vice_president.name == treasurer.name) {
    		start.add_member(&president);
    		start.add_member(&vice_president);
    		start.add_member(&secretary);
    	}
    
    	else {
    		start.add_member(&president);
    		start.add_member(&vice_president);
    		start.add_member(&secretary);
    		start.add_member(&treasurer);
    	}
    
    	cout << ""MATHLETES( "" << start.number_members() << "" total members)"" << ""\n"";
    	cout << ""      President: "" << start.get_president()->name;
    	cout << ""\n"";
    	cout << "" Vice President: "" << start.get_vice_president()->name;
    	cout << ""\n"";
    	cout << ""      Secretary: "" << start.get_secretary()->name;
    	cout << ""\n"";
    	cout << ""      Treasurer: "" << start.get_treasurer()->name;
    	cout << ""\n"";
    
    
    	return 0;
    }

When I put this into my main, the while loop is supposed to make them the same, but it keeps prompting me to press enter twice in order to continue. If I do Hellen Garcia vs 

Hellen        Garcia, it ends up printing out nothing in the end."
learnprogramming,fooui27,t1_fompi2m,1587946735.0,"Hey vinc, so I am currently sticking with my if statement solution, but the other class TA just mentioned something about the HW that is so bs (It was never specified). The name Josh Lee is supposed to be the same thing as Josh         Lee in the input. I can't think of a way to make the two things the same. I honestly don't know if I should just ignore this stuff at this point, as the assignment is due at 11:59 pm. This is my code in a separate reply."
learnprogramming,fomoycf,t1_fomolp3,1587898460.0,"This code is supposed to add a new member only if the name is not repeating for the officer's position (aka president, vice, secretary, and treasurer). 
And do you mean club_member[j] -> name == s? This creates errors for my ==. 

I technically found a way to fulfill the requirements by just spamming all the possibilities of officer names with if statements in the main, but that is such a primitive way to do it."
learnprogramming,fomleq7,t1_folbu4d,1587894444.0,"    void StudentClub::add_member(Student* s) {
    	int j = 0; 
    	while (j < club_member.size()) {
    		if (club_member[j].name == s) {
    			break; 
    		}
    		else {
    			club_member.push_back(s);
    		}
    		j++;
    	}
    	
    }

Well, I just ran into another situation. I realized I didn't fully read the instructions, and it says that a person of similar name can hold the more than one officer position. It says my club\_member\[j\].name must have class type. But I thought I already expressed that"
learnprogramming,folfm0m,t1_folbu4d,1587861182.0,Thanks!
learnprogramming,folabqs,t1_fol8zgk,1587858035.0,"It works now! I might still need to change a few things, but thank you so much!"
learnprogramming,fol87s3,t1_fol7ryi,1587856812.0,"See my code in the separate reply:

So this is what I am trying to do right now, I want to pass all the values into StudentClub and have the vector slowly push back the amount of values (I still have to update my main). There is an issue arising with my temp.push\_back(\*s) though. It is saying no instance of overloaded function."
learnprogramming,fol7ycm,t1_fol7ryi,1587856662.0,"    #include <iostream>
    #include <string>
    #include <vector>
    #include <iomanip>
    using namespace std; 
    class Student {
    public: 
    	
    	Student(); 
    	string name; 
    	
    };
    
    class StudentClub {
    public: 
    	StudentClub(Student* p, Student* v, Student* s, Student* t,
    		vector<Student*> m);
    	Student* get_president() const;
    	Student* get_vice_president() const;
    	Student* get_secretary() const;
    	Student* get_treasurer() const;
    	vector<Student*> get_members() const;
    	void add_member(Student* s);
    	size_t number_members() const;
    private: 
    	Student* President = new Student();
    	Student* Vice_President = new Student();
    	Student* Secretary = new Student();
    	Student* Treasurer = new Student();
    	vector <Student*> temp;
    
    	  
    };
    StudentClub::StudentClub(Student* p, Student* v, Student* s, Student* t,
    	vector<Student*> m) {
    	President = p; 
    	Vice_President = v; 
    	Secretary = s; 
    	Treasurer = t; 
    	temp = m; 
    	
    }
    Student* StudentClub::get_president() const {
    	return President; 
    
    }
    Student* StudentClub::get_vice_president() const {
    	return Vice_President; 
    }
    Student* StudentClub::get_secretary() const {
    	return Secretary; 
    }
    Student* StudentClub::get_treasurer() const {
    	return Treasurer; 
    }
    vector<Student*> StudentClub::get_members() const {
    	return temp; 
    }
    void StudentClub::add_member(Student* s) {
    	temp.push_back(*s); 
    }
    size_t StudentClub::number_members() const {
    	return temp.size(); 
    }
    int main()
    {
    	string one, two, three, four, five; 
    	Student president; 
    	Student vice_president; 
    	Student secretary; 
    	Student treasurer; 
    	vector<Student*> calc; 
    	Student newstudent; 
    
    	cout << ""President: ""; 
    	getline(cin, president.name);
    	cout << ""\n"";
    	cout << ""Vice-President: "";
    	getline(cin, vice_president.name);
    	cout << ""\n""; 
    	cout << ""Secretary: ""; 
    	getline(cin, secretary.name);
    	cout << ""\n"";
    	cout << ""Treasurer: ""; 
    	getline(cin, treasurer.name);
    	cout << ""\n"";
    	
    	cout << ""New Member (Q to quit): "";
    	getline(cin, newstudent.name);
    	if (newstudent.name != ""Q"") {
    		calc.push_back(&newstudent);
    	}
    	while (newstudent.name != ""Q"") {
    		cout << ""New Member (Q to quit): ""; 
    		getline(cin, newstudent.name);
    		if (newstudent.name != ""Q"") {
    			calc.push_back(&newstudent);
    		}
    	}
    	StudentClub start(&president, &vice_president, &secretary, &treasurer, calc);
    }"
learnprogramming,fol77rd,t1_fol6jox,1587856242.0,"Thanks so much for bearing with me: Based off of what I have right now, the red line no longer appears under the &, but I just have two linker issues (2019 and 1120). Should I continue on with this set up? I'm concerned about the vector <Student> temp that I have in the private data. 

    

\#include <iostream>

\#include <string>

\#include <vector>

\#include <iomanip>

using namespace std; 

class Student {

public: 

	

	Student(); 

	string name; 

	

&#x200B;

&#x200B;

};

&#x200B;

class StudentClub {

public: 

	StudentClub(Student\* p, Student\* v, Student\* s, Student\* t,

		vector<Student\*> m);

	Student\* get\_president() const;

	Student\* get\_vice\_president() const;

	Student\* get\_secretary() const;

	Student\* get\_treasurer() const;

	vector<Student\*> get\_members() const;

	void add\_member(Student\* s);

	size\_t number\_members() const;

private: 

	Student\* President = new Student();

	Student\* Vice\_President = new Student();

	Student\* Secretary = new Student();

	Student\* Treasurer = new Student();

	vector <Student> temp;

&#x200B;

	  

};

StudentClub::StudentClub(Student\* p, Student\* v, Student\* s, Student\* t,

	vector<Student\*> m) {

	President = p; 

	Vice\_President = v; 

	Secretary = s; 

	Treasurer = t; 

	

}

Student\* StudentClub::get\_president() const {

	return President; 

&#x200B;

}

Student\* StudentClub::get\_vice\_president() const {

	return Vice\_President; 

}

Student\* StudentClub::get\_secretary() const {

	return Secretary; 

}

Student\* StudentClub::get\_treasurer() const {

	return Treasurer; 

}

&#x200B;

&#x200B;

int main()

{

	string one, two, three, four, five; 

	Student president; 

	Student vice\_president; 

	Student secretary; 

	Student treasurer; 

	vector<Student\*> calc; 

	Student newstudent; 

&#x200B;

	cout << ""President: ""; 

	getline(cin, [president.name](https://president.name));

	cout << ""\\n"";

	cout << ""Vice-President: "";

	getline(cin, vice\_president.name);

	cout << ""\\n""; 

	cout << ""Secretary: ""; 

	getline(cin, [secretary.name](https://secretary.name));

	cout << ""\\n"";

	cout << ""Treasurer: ""; 

	getline(cin, [treasurer.name](https://treasurer.name));

	cout << ""\\n"";

	

	cout << ""New Member (Q to quit): "";

	getline(cin, [newstudent.name](https://newstudent.name));

	if ([newstudent.name](https://newstudent.name) != ""Q"") {

		calc.push\_back(&newstudent);

	}

	while ([newstudent.name](https://newstudent.name) != ""Q"") {

		if ([newstudent.name](https://newstudent.name) != ""Q"") {

			calc.push\_back(&newstudent);

		}

	}

	StudentClub start(&president, &vice\_president, &secretary, &treasurer, calc);

}"
learnprogramming,fol500o,t1_foje01c,1587855000.0,"Yeah, this is an assignment and the constructors I have under public of StudentClub can't change (I can add more constructors though). My code is still not working. A read line keeps appear under the first & of StudentClub start(&president, &vice\_president, &secretary, &treasurer, &calc);

I get E0289: no instance of constructor 

And C2664: cannot convert argument 5. I don't know what I am doing wrong in this case. 

    

\#include <iostream>

\#include <string>

\#include <vector>

\#include <iomanip>

using namespace std; 

class Student {

public: 

	

	Student(); 

	string name; 

&#x200B;

&#x200B;

};

&#x200B;

class StudentClub {

public: 

	StudentClub(Student\* p, Student\* v, Student\* s, Student\* t,

		vector<Student\*> m);

	Student\* get\_president() const;

	Student\* get\_vice\_president() const;

	Student\* get\_secretary() const;

	Student\* get\_treasurer() const;

	vector<Student\*> get\_members() const;

	void add\_member(Student\* s);

	size\_t number\_members() const;

private: 

	Student\* President = new Student();

	Student\* Vice\_President = new Student();

	Student\* Secretary = new Student();

	Student\* Treasurer = new Student();

	vector <Student\*> temp;

	  

};

StudentClub::StudentClub(Student\* p, Student\* v, Student\* s, Student\* t,

	vector<Student\*> m) {

	President = p; 

	Vice\_President = v; 

	Secretary = s; 

	Treasurer = t; 

	temp = m; 

}

Student\* StudentClub::get\_president() const {

	return President; 

&#x200B;

}

Student\* StudentClub::get\_vice\_president() const {

	return Vice\_President; 

}

Student\* StudentClub::get\_secretary() const {

	return Secretary; 

}

Student\* StudentClub::get\_treasurer() const {

	return Treasurer; 

}

&#x200B;

&#x200B;

int main()

{

	string one, two, three, four, five; 

	Student president; 

	Student vice\_president; 

	Student secretary; 

	Student treasurer; 

	vector<Student\*> calc; 

	Student newstudent; 

&#x200B;

	cout << ""President: ""; 

	getline(cin, [president.name](https://president.name));

	cout << ""\\n"";

	cout << ""Vice-President: "";

	getline(cin, vice\_president.name);

	cout << ""\\n""; 

	cout << ""Secretary: ""; 

	getline(cin, [secretary.name](https://secretary.name));

	cout << ""\\n"";

	cout << ""Treasurer: ""; 

	getline(cin, [treasurer.name](https://treasurer.name));

	cout << ""\\n"";

	

	cout << ""New Member (Q to quit): "";

	getline(cin, [newstudent.name](https://newstudent.name));

	if ([newstudent.name](https://newstudent.name) != ""Q"") {

		calc.push\_back(&newstudent);

	}

	while ([newstudent.name](https://newstudent.name) != ""Q"") {

		if ([newstudent.name](https://newstudent.name) != ""Q"") {

			calc.push\_back(&newstudent);

		}

	}

	StudentClub start(&president, &vice\_president, &secretary, &treasurer, &calc);

}"
learnprogramming,fojd6qf,t1_fojcnqw,1587817353.0,"So you mean I should create a new student variable everytime it arrives to this point? I can’t think of a way to fix this issue. 
I technically don’t even have to print out the name of the non officer position names. I just need to update the vector size in order to print out the total amount of members in the club"
learnprogramming,fojbsmg,t1_fojakby,1587816029.0,I’m still kind of weak with pointers. So how should I set up my calc vector (the constructors in studentcount are mandatory btw). Should I create a vector in my Student class?
ucla,focrp42,t1_focrije,1587674950.0,Been trying to get in as well. Maybe we could potentially work together if we still can’t get access
ucla,fo4sbn5,t1_fnwzvt7,1587510264.0,Lol Math 32B is basically the same thing right now
learnprogramming,fnrnhkg,t1_fnqs5c3,1587194734.0,"Thanks! 

However, I am having a Linker issue now with what I am trying. I got a Linker issue 2019 and 1120? What is going on? Here is the code: 

    #include <iostream>
    #include <string>
    #include <vector>
    using namespace std;
    
    class Person {
    public:
    	Person(string player);
    	string get_player() const;
    	string get_player2() const; 
    	int count() const;
    	int count2() const; 
    	void win();
    private:
    	string person;
    	string person2; 
    	int count1; 
    	int wins; 
    
    };
    
    class Game {
    public:
    	Game(Person* p1, Person* p2); //set up the game. 
    	void input(); //this is going to be the player marker
    	void print(string a, string b); //displays the board 
    
    	void playerOne(string newname);
    	void playerTwo(string newname2);
    	
    
    private:
    	vector<vector<string>> row;
    	Person* player1;
    	Person* player2;
    	
    
    };
    
    Person::Person(string player) {
    	person = player;
    	
    }
    string Person::get_player() const {
    	return person;
    }
    /*string Person::get_player2() const {
    	return person2; 
    }*/
    Game::Game(Person* p1, Person* p2) {
    	
    	row = {{"" "","" "","" ""},
    		{"" "","" "","" ""}, 
    		{"" "","" "","" ""}};
    
    }
    
    /*void Game::playerOne(string newname) {
    
    
    	Person player(newname);
    	player1 = &player;
    	*player1 = player;
    	//cout << player1->get_player() << endl;
    }
    void Game::playerTwo(string newname2) {
    
    	Person playertwo(newname2);
    	player2 = &playertwo;
    	*player2 = playertwo;
    	//cout << player2->get_player() << endl;
    }*/
    void Game::print(string a, string b) {
    	//Person playera(a,b);
    	//Person playerb(b);
    	//player1 = &playera;
    	//player2 = &playera;
    	cout << ""     Tic Tac Toe "" << endl;
    	cout << ""  "" << player1->get_player() << "" (X) - "";
    	cout << player2->get_player2() << "" (O)"" << endl;
    	cout << endl;
    	cout << ""     1      2       3"" << endl;
    	cout << ""         |       |     "" << endl;
    	cout << ""1    ""<< row[0][0] << ""   |  "" << row[0][1] << ""    |  "" << row[0][2] << ""   "" << endl;
    	cout << ""  _______|_______|_____"" << endl;
    	cout << ""         |       |     "" << endl;
    	cout << ""2    "" << row[1][0] << ""   |  "" << row[1][1] << ""    |  "" << row[1][2] << ""   "" << endl;
    	cout << ""  _______|_______|_____"" << endl;
    	cout << ""         |       |     "" << endl;
    	cout << ""3    "" << row[2][0] << ""   |  "" << row[2][1] << ""    |  "" << row[2][2] << ""   "" << endl;
    	cout << ""         |       |     "" << endl;
    	cout << row.size() << endl; 
    }
    int main() {
    	string name1;
    	string name2;
    	
    	int number;
    	cout << ""Number of games: "";
    	cin >> number;
    	cin.ignore();
    	cout << ""Player 1 Name = "";
    	getline(cin, name1);
    
    	cout << ""Player 2 Name = "";
    	getline(cin, name2);
    	Person player1(name1);
    	Person player2(name2);
    	Game play(&player1, &player2);
    
    	play.print(name1, name2);
    }"
CodingHelp,fnriape,t1_fnrc3m8,1587189810.0,"How do I set up the new function. In the state of my code right now, I don’t think I can just set it equal to new 

So since there are two players, can I just do Person player(newname, newname2); 
And then have player1 and player2 both equal new Player"
learnprogramming,fnqq6ys,t1_fnqph0u,1587169819.0," [https://www.geeksforgeeks.org/2d-vector-in-cpp-with-user-defined-size/](https://www.geeksforgeeks.org/2d-vector-in-cpp-with-user-defined-size/) 

I am following the example of this website, but I don't understand why my code is messing up."
learnprogramming,fnqpjp8,t1_fnqpcka,1587169419.0,"No , there is more. But here is the whole code: 

\#include <iostream>

\#include <string>

\#include <vector>

using namespace std;

&#x200B;

class Person {

public:

	Person(string player, string player2);

	string get\_player() const;

	string get\_player2() const; 

	int count() const;

	void win();

private:

	string person;

	string person2; 

&#x200B;

};

&#x200B;

class Game {

public:

	Game(); //set up the game. 

	void input(); //this is going to be the player marker

	void print(string a, string b); //displays the board 

&#x200B;

	void playerOne(string newname);

	void playerTwo(string newname2);

	

&#x200B;

private:

	vector<vector<string>> row;

	Person\* player1;

	Person\* player2;

	

&#x200B;

};

&#x200B;

Person::Person(string player, string player2) {

	person = player;

	person2 = player2; 

}

string Person::get\_player() const {

	return person;

}

string Person::get\_player2() const {

	return person2; 

}

Game::Game() {

	

	row{{' ',' ',' '},{ ' ', ' ',' '}, {' ',' ',' '}};

&#x200B;

}

&#x200B;

/\*void Game::playerOne(string newname) {

&#x200B;

&#x200B;

	Person player(newname);

	player1 = \&player;

	\*player1 = player;

	//cout << player1->get\_player() << endl;

}

void Game::playerTwo(string newname2) {

&#x200B;

	Person playertwo(newname2);

	player2 = \&playertwo;

	\*player2 = playertwo;

	//cout << player2->get\_player() << endl;

}\*/

void Game::print(string a, string b) {

	Person playera(a,b);

	//Person playerb(b);

	player1 = \&playera;

	player2 = \&playera;

	cout << ""     Tic Tac Toe "" << endl;

	cout << ""  "" << player1->get\_player() << "" (X) - "";

	cout << player2->get\_player2() << "" (O)"" << endl;

	cout << endl;

	cout << ""     1      2       3"" << endl;

	cout << ""         |       |     "" << endl;

	cout << ""1        |       |     "" << endl;

	cout << ""  \_\_\_\_\_\_\_|\_\_\_\_\_\_\_|\_\_\_\_\_"" << endl;

	cout << ""         |       |     "" << endl;

	cout << ""2        |       |     "" << endl;

	cout << ""  \_\_\_\_\_\_\_|\_\_\_\_\_\_\_|\_\_\_\_\_"" << endl;

	cout << ""         |       |     "" << endl;

	cout << ""3        |       |     "" << endl;

	cout << ""         |       |     "" << endl;

	cout << row.size() << endl; 

}

int main() {

	string name1;

	string name2;

	Person\* player1; 

	Person\* player2; 

	Game play;

	int number;

	cout << ""Number of games: "";

	cin >> number;

	cin.ignore();

	cout << ""Player 1 Name = "";

	getline(cin, name1);

&#x200B;

	[//play.playerOne](//play.playerOne)(name1);

&#x200B;

	cout << ""Player 2 Name = "";

	getline(cin, name2);

	[//play.playerTwo](//play.playerTwo)(name2);

&#x200B;

	play.print(name1, name2);

}

&#x200B;

    
    
    

&#x200B;

#"
learnprogramming,fnqjrc7,t1_fnqfhfm,1587166002.0,"    Hi Thanks for responding, but can you see what I did wrong for the setting up the vector below? It keeps giving me a red line under the row in the second to last line, saying expecting a ';'. What am I doing wrong syntax wise? 
    class Game {
    public:
    	Game(); //set up the game. 
    	void input(); //this is going to be the player marker
    	void print(string a, string b); //displays the board 
    
    	void playerOne(string newname);
    	void playerTwo(string newname2);
    	
    
    private:
    	vector<vector<string>> row;
    	Person* player1;
    	Person* player2;
    	
    
    };
    
    Person::Person(string player, string player2) {
    	person = player;
    	person2 = player2; 
    }
    string Person::get_player() const {
    	return person;
    }
    string Person::get_player2() const {
    	return person2; 
    }
    Game::Game() {
    	
    	row{{' ',' ',' '},{ ' ', ' ',' '}, {' ',' ',' '}};
    
    }"
learnprogramming,fnqezdk,t1_fnqevlv,1587163298.0,Yeah it’s an annoying arbitrary thing from the assignment. I’ll try this code out
learnprogramming,fnqdob9,t1_fnqd7td,1587162568.0,But they have to be pointers though. So I just set player1 = name1?
NYYankees,fnj9fhf,t1_fnhhb9a,1586994496.0,They got roasted so hard last year
halo,fn7ilm6,t1_fn3psqj,1586721059.0,Honestly that person must be new to Reach. Most players should know at this point not to melee an armor locker. I don’t know why anyone who has seen it would do that again.
halo,fn7ie4f,t1_fn4er25,1586720942.0,"Yeah, the new armor lock is genuinely useless on most maps. Most people just lob a million grenades at you. Other abilities are far better than it. 
Most people have learned at this point to not melee an armor locker. So many people did that constantly back in the days and got killed for it"
halo,fn22548,t1_fn0qygw,1586575860.0,"And the multiplayer was Reach map packs.
People who played on the anniversary disc also couldn’t play with Reach players. I think the thing also shipped with a download code for the maps to be playable on Reach, making it kind of pointless to stay on the Anniversary server. 
I think it did end up kind of isolating the people who only had Anniversary"
ucla,fmy3949,t1_fmvjxkn,1586477182.0,"Hi, there’s no discussion forum on ccle. I was just wondering if you could let them know about it in the group chat? I don’t know who else to contact rn. Maybe they’ll give you the link"
ucla,fmvjqqn,t1_fmvjpr0,1586419471.0,Pls send me the link. Thank you!!
Shipwrecks,fmvhg68,t3_fs2dsw,1586417117.0,"Curious question: Do non locals visit the wreck often? 

I have read stories of people swimming out to the wreck of the SS American Star when it was still above water."
ucla,fmv9ov5,t3_fwrxdg,1586409944.0,"So what dd you decide? Carrigan's class is currently open. I'm in Blank's class, but nothing much has happened so far. We do have two group projects for the entire quarter though."
ucla,fmv7v3v,t1_fmuvn3f,1586408451.0,Isn't the drop penalty gone altogether for session A this year as well?
ucla,fmq6s7c,t1_fmq6pfa,1586293927.0,Passed lol.
halo,fmcgzuh,t1_fmcb4ro,1585945485.0,"Haha, the rooster teeth LASO gameplay. 
Black Eye skull lowkey helped them in some close range encounters. Allowed them to get their shields back"
